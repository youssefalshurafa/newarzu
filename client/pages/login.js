import Footer from '@/components/footer';
import NavBar from '@/components/nav';
import dynamic from 'next/dynamic';
import Head from 'next/head';
import Link from 'next/link';
import { useState, useContext, useEffect } from 'react';
import AuthContext from '@/context/AuthProvider';
import axios from './api/axios';

const LOGIN_URL = '/login';

function Login() {
  const { setAuth } = useContext(AuthContext);
  const [visible, setVisible] = useState(false);
  const showBar = () => setVisible(!visible);

  const [user, setUser] = useState('');
  const [pwd, setPwd] = useState('');
  const [errMsg, setErrMsg] = useState('');
  const [success, setSuccess] = useState(false);
  useEffect(() => {
    setErrMsg('');
  }, [user, pwd]);

  const handleSubmit = async (e) => {
    e.preventDefault();

    try {
      const response = await axios.post(
        LOGIN_URL,
        JSON.stringify({ username: user, pwd }),
        {
          headers: { 'Content-Type': 'application/json' },
          withCredentials: true,
        }
      );

      console.log(JSON.stringify(response?.data));
      const accessToken = response?.data?.accessToken;
      const roles = response?.data?.roles;
      setAuth({ user, pwd, roles, accessToken });
      setUser('');
      setPwd('');
      setSuccess(true);
    } catch (err) {
      if (!err?.response) {
        setErrMsg('No server response');
      } else if (err.response?.status === 400) {
        setErrMsg('Missing username or password');
      } else if (err.response?.status === 401) {
        setErrMsg('Password Incorrect!');
      } else if (err.response?.status === 404) {
        setErrMsg('Username not Found!');
      } else {
        setErrMsg('Login Failed');
      }
    }
  };

  return (
    <>
      <Head>
        <title>{'Login | Arzu'}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="min-h-screen flex flex-col justify-between">
        <div className=" fixed top-0 z-10 w-full">
          <NavBar showBar={showBar} />
        </div>
        <div className="relative top-20  mx-auto bg-gray-100  font-poppins px-4 pb-4 rounded-md border shadow-md">
          <h1 className=" font-serif text-center pt-4 text-2xl">Login</h1>
          <p className="text-center text-red-500">{errMsg}</p>
          <form onSubmit={handleSubmit} className=" space-y-4">
            <label htmlFor="username">Username :</label>
            <input
              className="bg-gray-100 border ml-1 rounded-md  "
              type="text"
              id="username"
              autoComplete="off"
              onChange={(e) => setUser(e.target.value)}
              value={user}
              required
            />
            <br />
            <label htmlFor="password">Password :</label>
            <input
              className="bg-gray-100 border ml-2 rounded-md  "
              type="password"
              id="password"
              onChange={(e) => setPwd(e.target.value)}
              value={pwd}
              required
            />
            <br />
            <div className="text-center">
              <button className=" bg-gray-300 rounded-md w-full py-2 active:bg-black active:text-white">
                Sign In
              </button>
            </div>
          </form>
          <p className="mt-4">
            Need an account?
            <br />
            <span className=" text-blue-500 underline">
              <Link href={'/register'}>Sign Up!</Link>
            </span>
          </p>
        </div>
        <div className="mt-8">
          <Footer />
        </div>
      </div>
    </>
  );
}

export default dynamic(() => Promise.resolve(Login), { ssr: false });
